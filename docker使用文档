docker三个基本的概念
1：镜像(image)
2：容器(container)
3：仓库(repository)

docker -build  构建镜像
docker -ship   运输镜像，主要是在仓库之间进行
docker -run    运行镜像


1：namespace 命名空间
   是linux为我们提供的用于分离进程树，网络接口，挂载点以及进程间通信资源的方法
   docker通过命名空间完成对宿主机器进程和网络的隔离
   
2：网络
   docker启动的容器都具有单独的网络空间，默认的网络连接模式是网桥模式
   docker会为所有的启动的容器设置IP地址。默认docker服务器在宿主机器上启动创建
   新的虚拟网桥docker0,启动服务默认与其连接
   
   在默认情况下，每一个容器会创建两个一对虚拟网卡，两个虚拟网卡组成了数据的通道，
   其中一个会被放在创建的容器中，会加入到docker0网桥中。
   brctl show 获取当前网桥的接口
   
   docker0 会为每一个容器分配一个IP地址，并将docker0的IP地址设置为默认的网关，
   网桥docker0通过iptables中的配置与宿主机器上的网卡相连，所有符合条件的请求
   都会通过iptables转发到docker0并由网桥分发给对应的机器。
   iptables -t nat -L 获取docker链中新创建的规则。
   
   docker将容器的内部端口暴露给外部并对数据包进行转发，docker会分配一个IP地址。
   同时会向iptables中追加一条新的规则
   
   
3：libnetwork
   整个网络部分的功能都是通过docker拆分的libnetwork实现的，提供了实现连接不同容器。
   在网络容器模型中，每一个容器内部都包含一个sandbox，其中存储着当前的网络栈配置，
   每一个sandbox中都可能有一个或多个Endpoint，即虚拟网卡veth，sandbox通过Endpoint加入
   到不同的网络中，这里的网络可以是网桥或者VLAN.
   
   
4：挂载点
   限制docker启动的容器可以访问到宿主机器上的目录
   
   在新的进程中创建隔离的挂载点，子进程得到父进程挂载的拷贝。
   
   为了保证当前的容器进程无法访问宿主机器上其他目录，我们可以通过libcontainer提供的
   pivor_root或者chroot函数改变进程能够访问的文件目录的根节点。
   将需要的目录挂载到容器中，同时也禁止了当前容器去访问宿主机器的其他目录，保证了不同文件系统的隔离。
   
   
5：CGroups
   linux的命名空间解决了新创建的进程隔离文件系统，网络并于宿主机器之间的进程相互隔离。
   而对于物理资源上的隔离，比如CPU和内存。就通过CGroups来隔离宿主机器上的资源。
   
   CGroup是一组被相同的标准和参数限制的进程。不同的CGroup之间具有层级关系，
   可以从父类继承一些用于限制资源使用的标准和参数。
   
   在CGroup中，所有的任务就是一个系统的一个进程，而CGroup就是按照某种标准划分的进程。
   在CGroup机制中，所有的资源控制都是以CGroup为单位实现的，每一个进程都可以随时加入一个
   CGroup，也可以随时退出一个CGroup
   
   lssubsys -m 来获取当前CGroup中具有那些子系统。
   
6：UnionFS
   linux的命名空间解决进程，网络以及文件系统的隔离。
   CGroups解决了CPU,内存等物理资源的隔离。
   而UnionFS，设计用于把多个文件系统联合到同一个挂载点的文件系统服务。
   
   
7：存储驱动
   docker使用不同的存储驱动管理镜像内的文件系统并运行容器，这些存储驱动与
   docker volume存在区别，存储殷勤管理折能够在多个容器之间共享的内存。
   
8：docker构建并存储镜像
   docker中的每一个镜像都是由一系列的只读的层组成的。
   当容器被运行后，就会在镜像创建一个可读写的层，即容器层。所有对于容器的
   修改实际上是对这个容器读写层的修改。
   
   容器和镜像的区别在于，所有的镜像都是只读的，而每一个容器都是在镜像上加一个
   可读写的层，也就是同一个镜像可以对应多个容器。
   
   
9：容器，物理机，虚拟机的区别
   容器：容器虚拟化的是操作系统，共享同一套操作系统资源
   虚拟机：虚拟化出一套硬件后，在其上运行一套完整操作系统
   虚拟机的隔离程度高于容器。
   
   特性           容器                虚拟机
   启动           秒级                分钟
   硬盘使用       一般为MB            一般为GB
   性能           接近原生            弱于
   系统支持量     单机支持上前容器    一般几十个
   
   容器是一个应用层抽象，用于将代码和依赖资源打包在一起。 
       多个容器可以在同一台机器上运行，共享操作系统内核，
       但各自作为独立的进程在用户空间中运行。
       与虚拟机相比， 容器占用的空间较少（容器镜像大小通常只有几十兆），
       瞬间就能完成启动 。
    
   虚拟机（VM）是一个物理硬件层抽象，用于将一台服务器变成多台服务器。
       管理程序允许多个VM在一台机器上运行。
       每个VM都包含一整套操作系统、一个或多个应用、必要的二进制文件和库资源，
       因此占用大量空间。而且VM启动也十分缓慢 。

