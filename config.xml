<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.9.0">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>7</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>CODECOVERAGE</name>
          <description>activates/deactivates Code Coverage:
   NONE : no code coverage collection
   FULL : code coverage collection, but only on the code from the makefile of the repository itself, NOT activated on the dependency repo&apos;s
   FULL_REC :  code coverage collection, recursively activated on all code used, so also all dependency repositories.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>NONE</string>
              <string>FULL</string>
              <string>FULL_REC</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>HASH</name>
          <description>Mercurial Hash (or branch name)</description>
          <defaultValue>default</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SEED</name>
          <description>seed to use for the simulations.
if NULL, a random seed will be used.</description>
          <defaultValue>NULL</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SCHEDULECATEGORY</name>
          <description>the category of tests that need to be scheduled</description>
          <defaultValue>daily</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCECOMPILELIB</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>LOGRESULTSTODB</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>SIMOT</name>
          <description>selection if all or 
only sim or 
only ot is run</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>all</string>
              <string>simulation</string>
              <string>ontarget</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>CATEGORY</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>all</string>
              <string>miniregression</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OTBUILDSOURCE</name>
          <description></description>
          <defaultValue>regression</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.mercurial.MercurialSCM" plugin="mercurial@1.56">
    <source>ssh://hg@hg.be.alcatel-lucent.com/hw/asic/design/project/langjiu</source>
    <modules></modules>
    <revisionType>BRANCH</revisionType>
    <revision>$HASH</revision>
    <clean>false</clean>
    <credentialsId></credentialsId>
    <disableChangeLog>false</disableChangeLog>
  </scm>
  <assignedNode>regre_launch</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
umask 002

cd $WORKSPACE/

actualHash=$(hg id --id --debug)

echo &quot;Setting environment&quot;


cd $WORKSPACE/


source sourceme.sh  -u
#source sourceme.sh  

echo &quot;Running script that adds all test jobs&quot;
cd $WORKSPACE/tools/regression
tclsh launch_regression.tcl -hash $actualHash -seed $SEED -scheduleCategory $SCHEDULECATEGORY -jobSimUrl &quot;http://135.251.20.19:8080/job/langjiu_sim/&quot; -jobOtUrl &quot;&quot; -codeCoverage $CODECOVERAGE -forceCompileLib $FORCECOMPILELIB -logToDb $LOGRESULTSTODB -simOt $SIMOT -categorySelection $CATEGORY -otBuildSource $OTBUILDSOURCE -dbUser root -dbPass 123456 -dbName regres_langjiu -dbHost 135.251.50.20 -dbPort 3306

cd $WORKSPACE/
( echo HASH=$actualHash ) &gt;&gt; langjiu_Regre.prop</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.22">
        <script>import hudson.model.Cause
import hudson.model.Hudson
import hudson.model.ParameterValue
import hudson.model.ParametersAction
import hudson.model.StringParameterValue
import hudson.FilePath
import java.util.Properties
import java.io.StringReader

// fetch some environment variables
def regression = manager.build.buildVariables.get(&quot;REGRESSION&quot;);
def testname = manager.build.buildVariables.get(&quot;TESTNAME&quot;);
def schedulecategory= manager.build.buildVariables.get(&quot;SCHEDULECATEGORY&quot;);
// fetch name of slave that ran this build
def slaveName = manager.build.getBuiltOn().getDisplayName();


// a regression launcher job will get a &quot;launcher&quot; indication
// actual tests get a badge + testname
manager.addShortText(&quot;Launcher for &quot; + schedulecategory + &quot; run @ &quot; + slaveName);

// Start  sendemail if all tests are finished
currentJob = hudson.model.Hudson.instance.items.find{job -&gt; job.name == &quot;yanghe_sim&quot;}
while (true) {
   runningRuns = currentJob._getRuns().iterator().findAll{run -&gt; run.hasntStartedYet() || run.isBuilding()}
   if (runningRuns.size() == 0 &amp;&amp; !currentJob.isInQueue()) {
      break
   } else {
      sleep 900*60
   }
}

//def job_coverage = Hudson.instance.getJob(&apos;yanghe_coverage&apos;)
def fp = new FilePath(manager.build.workspace.channel, manager.build.workspace.toString() + &quot;/yanghe_Regre.prop&quot;)

def props = new Properties()
props.load(new StringReader(fp.readToString()))

ArrayList&lt;ParameterValue&gt; parameters= new ArrayList&lt;ParameterValue&gt;();
parameters.add(new StringParameterValue(&apos;HASH&apos;, props.getProperty(&apos;HASH&apos;)));

//if (props.getProperty(&apos;CODECOVERAGE&apos;) != &apos;NONE&apos;) {
//   job_coverage.scheduleBuild(0, new Cause.UpstreamCause(manager.build), new ParametersAction(parameters))
//}

// Also start regression mail
//def job_mail = Hudson.instance.getJob(&apos;yanghe_mail&apos;)
//job_mail.scheduleBuild(new Cause.UpstreamCause(manager.build))</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.tasks.Mailer plugin="mailer@1.18">
      <recipients>Wenli.Liang@alcatel-sbell.com.cn</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>